/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.project.fooddelivery;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.border.LineBorder;

/**
 *
 * @author TheUltimateGamer
 */
public class OrdersPanel extends javax.swing.JPanel implements FrameClosedCallback {

    /**
     * Creates new form NewJPanel
     */
    
    private javax.swing.JFrame frame;
    private Cart c;
    private int Number;
    
    public OrdersPanel(javax.swing.JFrame frame,Cart c , int Number) {
        this.frame = frame;
        this.c = c;
        this.Number = Number;
        initComponents();
        initComponents2();
    }

    
    private void initComponents2(){
        setPreferredSize(new Dimension(0, 105));

        
        if(c.getStatus() == 1){
        Icon.setIcon(new javax.swing.ImageIcon("icons\\Checkout.png")); 
        ActionButton.setText("Submit a Complaint");
        
        if(c.getMessageArray().size()!=0){
        ActionButton.setText("View Complaints");
        }
        
        }else if(c.getStatus() == 0){
        Icon.setIcon(new javax.swing.ImageIcon("icons\\checkout2.png")); 
        ActionButton.setText("Cancel Order");
        }else{
        Icon.setIcon(new javax.swing.ImageIcon("icons\\cancellation.png")); 
        ActionButton.setText("Submit a Complaint");
        if(c.getMessageArray().size()!=0){
        ActionButton.setText("View Complaints");
        }
        }
        
        if(FoodDelivery.user.getPermission()!=1){
            Confirm.hide();
        }
        
        
       
        
        if(c.getStatus() == 1 && FoodDelivery.user.getPermission() !=2){
            if(c.getMessageArray().size()==0)
                ActionButton.hide();
            Confirm.hide();
        }
        if(c.getStatus() == -1 && FoodDelivery.user.getPermission() !=2){
            if(c.getMessageArray().size()==0)
                ActionButton.hide();
            Confirm.hide();
        }

        Order_Num.setFont(new java.awt.Font("Segoe UI", 0, 24)); 
        if(FoodDelivery.user.getPermission() == 2){
        Order_Num.setText("Order #"+Number);
        }else{
        Order_Num.setText(c.getUser());
        
        }
        Items_Num.setText("Items: " + c.getCartArray().size());

        Price.setText("Total: "+ c.getTotal()+" EGP");

            this.setBorder(new LineBorder(Color.black));
            
            addMouseListener(new MouseAdapter() {

                @Override
                public void mousePressed(MouseEvent e) {
                     CartForm cf = new CartForm(c,2);
                     cf.setVisible(true);
                     cf.setLocation(frame.getLocationOnScreen());
                     frame.setVisible(false);

                }
            });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Icon = new javax.swing.JLabel();
        Order_Num = new javax.swing.JLabel();
        Items_Num = new javax.swing.JLabel();
        Price = new javax.swing.JLabel();
        ActionButton = new javax.swing.JButton();
        Confirm = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(32767, 105));
        setMinimumSize(new java.awt.Dimension(0, 105));
        setPreferredSize(new java.awt.Dimension(530, 105));

        Order_Num.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Order_Num.setText("Order #1");

        Items_Num.setText("Items:3");

        Price.setText("Total: 500 EGP");

        ActionButton.setText("Cancel");
        ActionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActionButtonActionPerformed(evt);
            }
        });

        Confirm.setText("Confirm Order");
        Confirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConfirmMouseClicked(evt);
            }
        });
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Icon, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Price)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Items_Num)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 280, Short.MAX_VALUE)
                                .addComponent(ActionButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Order_Num)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Confirm)))
                        .addGap(47, 47, 47))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Order_Num)
                            .addComponent(Confirm))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Items_Num)
                            .addComponent(ActionButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Price))
                    .addComponent(Icon, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ActionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActionButtonActionPerformed
        if(c.getStatus()==1 || c.getStatus()==-1){
            
            if(c.getMessageArray().size()!=0){
            
                MessagesForm mf = new MessagesForm(c);
                mf.setVisible(true);
                mf.setLocation(frame.getLocationOnScreen());
                frame.setVisible(false);
            
            }
            else{

            MessagesFrame JMessagesFrame = new MessagesFrame(c,this);
            JMessagesFrame.setVisible(true);
                 Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                
            // Calculate the center position
            int centerX = (screenSize.width - JMessagesFrame.getWidth()) / 2;
            int centerY = (screenSize.height - JMessagesFrame.getHeight()) / 2;

            // Set the frame's location to the center
            JMessagesFrame.setLocation(centerX, centerY);

            }
            
//        ActionButton.setText("Submit a Complaint");
        }else{
            
            Orders.ChangeOrderStatus(-1, c);
                   
        OrdersForm of = new OrdersForm();
            of.setVisible(true);
            of.setLocation(frame.getLocationOnScreen());
            frame.setVisible(false);
        }
        
        
        
    }//GEN-LAST:event_ActionButtonActionPerformed

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        
    }//GEN-LAST:event_ConfirmActionPerformed

    private void ConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConfirmMouseClicked
        Orders.ChangeOrderStatus(1,c);
            OrdersForm of = new OrdersForm();
            of.setVisible(true);
            of.setLocation(frame.getLocationOnScreen());
            frame.setVisible(false);
        
        
        
    }//GEN-LAST:event_ConfirmMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActionButton;
    private javax.swing.JButton Confirm;
    private javax.swing.JLabel Icon;
    private javax.swing.JLabel Items_Num;
    private javax.swing.JLabel Order_Num;
    private javax.swing.JLabel Price;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onFrameClosed(String data) {
        
            OrdersForm of = new OrdersForm();
            of.setVisible(true);
            of.setLocation(frame.getLocationOnScreen());
            frame.setVisible(false);
        
        
        
    }
}
